// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241030144031_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api.Models.DegreeCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DegreeCodes");
                });

            modelBuilder.Entity("api.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DegreeCodeFkeyId")
                        .HasColumnType("integer");

                    b.Property<int?>("IdFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DegreeCodeFkeyId");

                    b.HasIndex("IdFkeyId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("api.Models.RoleCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoleCodes");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RoleCodeFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleCodeFkeyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.Models.Professor", b =>
                {
                    b.HasOne("api.Models.DegreeCode", "DegreeCodeFkey")
                        .WithMany("Professors")
                        .HasForeignKey("DegreeCodeFkeyId");

                    b.HasOne("api.Models.User", "IdFkey")
                        .WithMany("Professors")
                        .HasForeignKey("IdFkeyId");

                    b.Navigation("DegreeCodeFkey");

                    b.Navigation("IdFkey");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.HasOne("api.Models.RoleCode", "RoleCodeFkey")
                        .WithMany("Users")
                        .HasForeignKey("RoleCodeFkeyId");

                    b.Navigation("RoleCodeFkey");
                });

            modelBuilder.Entity("api.Models.DegreeCode", b =>
                {
                    b.Navigation("Professors");
                });

            modelBuilder.Entity("api.Models.RoleCode", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Navigation("Professors");
                });
#pragma warning restore 612, 618
        }
    }
}
