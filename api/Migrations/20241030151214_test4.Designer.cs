// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241030151214_test4")]
    partial class test4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api.Models.DegreeCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DegreeCodes");
                });

            modelBuilder.Entity("api.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("api.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DegreeCodeFkeyId")
                        .HasColumnType("integer");

                    b.Property<int?>("IdFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DegreeCodeFkeyId");

                    b.HasIndex("IdFkeyId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("api.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<string>("InviteCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumParticipants")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("api.Models.ProjectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProfessorFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorFkeyId");

                    b.ToTable("ProjectGroups");
                });

            modelBuilder.Entity("api.Models.ProjectGroupProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupFkeyId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GroupFkeyId");

                    b.HasIndex("ProjectFkeyId");

                    b.ToTable("ProjectGroupProjects");
                });

            modelBuilder.Entity("api.Models.ProjectRoleCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ProjectRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProjectRoleCodes");
                });

            modelBuilder.Entity("api.Models.RoleCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoleCodes");
                });

            modelBuilder.Entity("api.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GitHub")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("GroupFkeyId")
                        .HasColumnType("integer");

                    b.Property<int?>("IdFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GroupFkeyId");

                    b.HasIndex("IdFkeyId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RoleCodeFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleCodeFkeyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.Models.UserProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProjectFkeyId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectRoleCodeFkeyId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserFkeyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectFkeyId");

                    b.HasIndex("ProjectRoleCodeFkeyId");

                    b.HasIndex("UserFkeyId");

                    b.ToTable("UserProjects");
                });

            modelBuilder.Entity("api.Models.Professor", b =>
                {
                    b.HasOne("api.Models.DegreeCode", "DegreeCodeFkey")
                        .WithMany("Professors")
                        .HasForeignKey("DegreeCodeFkeyId");

                    b.HasOne("api.Models.User", "IdFkey")
                        .WithMany("Professors")
                        .HasForeignKey("IdFkeyId");

                    b.Navigation("DegreeCodeFkey");

                    b.Navigation("IdFkey");
                });

            modelBuilder.Entity("api.Models.ProjectGroup", b =>
                {
                    b.HasOne("api.Models.Professor", "ProfessorFkey")
                        .WithMany("ProjectGroups")
                        .HasForeignKey("ProfessorFkeyId");

                    b.Navigation("ProfessorFkey");
                });

            modelBuilder.Entity("api.Models.ProjectGroupProject", b =>
                {
                    b.HasOne("api.Models.ProjectGroup", "GroupFkey")
                        .WithMany("ProjectGroupProjects")
                        .HasForeignKey("GroupFkeyId");

                    b.HasOne("api.Models.Project", "ProjectFkey")
                        .WithMany()
                        .HasForeignKey("ProjectFkeyId");

                    b.Navigation("GroupFkey");

                    b.Navigation("ProjectFkey");
                });

            modelBuilder.Entity("api.Models.Student", b =>
                {
                    b.HasOne("api.Models.Group", "GroupFkey")
                        .WithMany("Students")
                        .HasForeignKey("GroupFkeyId");

                    b.HasOne("api.Models.User", "IdFkey")
                        .WithMany("Students")
                        .HasForeignKey("IdFkeyId");

                    b.Navigation("GroupFkey");

                    b.Navigation("IdFkey");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.HasOne("api.Models.RoleCode", "RoleCodeFkey")
                        .WithMany("Users")
                        .HasForeignKey("RoleCodeFkeyId");

                    b.Navigation("RoleCodeFkey");
                });

            modelBuilder.Entity("api.Models.UserProject", b =>
                {
                    b.HasOne("api.Models.Project", "ProjectFkey")
                        .WithMany()
                        .HasForeignKey("ProjectFkeyId");

                    b.HasOne("api.Models.ProjectRoleCode", "ProjectRoleCodeFkey")
                        .WithMany("UserProjects")
                        .HasForeignKey("ProjectRoleCodeFkeyId");

                    b.HasOne("api.Models.User", "UserFkey")
                        .WithMany()
                        .HasForeignKey("UserFkeyId");

                    b.Navigation("ProjectFkey");

                    b.Navigation("ProjectRoleCodeFkey");

                    b.Navigation("UserFkey");
                });

            modelBuilder.Entity("api.Models.DegreeCode", b =>
                {
                    b.Navigation("Professors");
                });

            modelBuilder.Entity("api.Models.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("api.Models.Professor", b =>
                {
                    b.Navigation("ProjectGroups");
                });

            modelBuilder.Entity("api.Models.ProjectGroup", b =>
                {
                    b.Navigation("ProjectGroupProjects");
                });

            modelBuilder.Entity("api.Models.ProjectRoleCode", b =>
                {
                    b.Navigation("UserProjects");
                });

            modelBuilder.Entity("api.Models.RoleCode", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Navigation("Professors");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
